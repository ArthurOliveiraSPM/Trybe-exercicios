version: '3'
services:
  frontend:
    build: frontend/    # Especificamos o contexto, ou seja, a pasta onde está o Dockerfile.
    ports:
    - 3000:3000  #  primeiro parâmetro é sempre a porta do computador local e o segundo parâmetro é a porta exposta no container
    restart: always
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/frontend/src # <caminho do diretório no seu pc>:<caminho para o diretório dentro do container> Isso significa que qualquer alteração dentro do diretório frontend/src da sua máquina será persistida mesmo que o container seja derrubado e “upado“ novamente.
    networks: # As redes virtuais permitem criar isolamento entre os serviços;
      - rede-virtual-1
  backend:
    build: backend/     # Mesmo caso aqui.
    ports:
    - 3001:3001  #  primeiro parâmetro é sempre a porta do computador local e o segundo parâmetro é a porta exposta no container
    restart: always
    environment:
      - DB_HOST=database
    depends_on:
      - database
    networks: # As redes virtuais permitem criar isolamento entre os serviços;
      - rede-virtual-1
      - rede-virtual-2
  database:
    image: betrybe/docker-compose-example-database:v1    # Especificamos a Imagem Docker diretamente.
    restart: always
    networks: # As redes virtuais permitem criar isolamento entre os serviços;
      - rede-virtual-2

volumes:
  dados-do-banco:

networks:
  rede-virtual-1:
  rede-virtual-2:
